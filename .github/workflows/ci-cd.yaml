name: CI/CD Pipeline bedrock

on:
  push:
    branches:
      - main

jobs:
  dockerize-spring-boot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Unit Tests
        working-directory: ./ayush
        run: ./mvnw test

      - name: Upload JUnit Reports
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: ayush/target/surefire-reports/

      - name: Run SpotBugs
        working-directory: ./ayush  
        run: ./mvnw com.github.spotbugs:spotbugs-maven-plugin:4.7.3.4:spotbugs

      - name: Upload SpotBugs Report
        uses: actions/upload-artifact@v4
        with:
          name: spotbugs-report
          path: ayush/target/spotbugsXml.xml
          if-no-files-found: warn

      - name: Cache OWASP Dependency Check DB
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository/org/owasp/dependency-check-data
          key: ${{ runner.os }}-owasp-db-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-owasp-db

      - name: Run OWASP Dependency Check
        working-directory: ./ayush
        run: |
          ./mvnw org.owasp:dependency-check-maven:10.0.4:check \
            -DnvdApiKeyDisabled=true \
            -Dnoupdate=true \
            -DfailBuildOnCVSS=7 \
            -DskipProvidedScope=true \
            -DskipRuntimeScope=false \
            -DretireJsAnalyzerEnabled=false \
            -DnodeAnalyzerEnabled=false \
            -DassemblyAnalyzerEnabled=false \
            -DcveUrlModified= \
            -DcveUrlBase=
        continue-on-error: true

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: ayush/target/dependency-check-report.html
          if-no-files-found: warn

      - name: Set up Docker image tag
        id: vars
        run: echo "TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/code-analyzer-bedrock:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max